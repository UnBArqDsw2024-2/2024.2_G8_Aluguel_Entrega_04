generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  email                  String      @unique
  name                   String
  cpf_cnpj               String      @id @unique
  password               String
  site                   String?
  reset_password_expires DateTime?
  reset_password_token   String?
  Property               Property[]
  Review                 Review[]
  telephone              Telephone[]
}

model Telephone {
  number String @id @unique
  userId String
  user   User   @relation(fields: [userId], references: [cpf_cnpj], onDelete: Cascade)
}

model Property {
  id                Int       @id @default(autoincrement())
  adType            String?
  condoFee          Float?
  description       String?
  propertyTax       Float?
  available         Boolean?  @default(true)
  numberOfBedrooms  Int?
  price             Float?
  creationDate      DateTime? @default(now())
  parkingSpaces     Int?
  propertyType      String?
  numberOfBathrooms Int?
  userCpfCnpj       String?
  addressPk         Int?      @unique
  status            String?   @default("OFFILNE")
  address           Address?  @relation(fields: [addressPk], references: [addressPk])
  user              User?     @relation(fields: [userCpfCnpj], references: [cpf_cnpj])
  reviews           Review[]
}

model Address {
  addressPk    Int       @id @default(autoincrement())
  neighborhood String?
  number       String?
  street       String?
  city         String?
  state        String?
  postalCode   String?
  property     Property?
}

model Review {
  userCpfCnpj String
  propertyId  Int
  rating      Int?
  comment     String?
  property    Property @relation(fields: [propertyId], references: [id])
  user        User     @relation(fields: [userCpfCnpj], references: [cpf_cnpj])

  @@id([userCpfCnpj, propertyId])
}
